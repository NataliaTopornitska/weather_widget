{"mappings":"A,S,E,C,C,C,C,C,C,C,C,C,C,C,C,C,E,G,C,I,E,C,C,E,C,G,E,E,K,A,C,M,E,C,E,G,M,C,E,I,C,E,G,Q,O,C,G,I,C,E,E,C,S,E,C,E,O,W,I,E,I,C,E,U,O,I,Q,S,C,C,C,E,I,E,E,K,C,E,G,S,E,C,E,E,E,E,E,E,E,O,E,C,S,E,C,E,E,E,E,E,E,E,Q,E,C,E,K,E,E,C,C,S,E,C,C,C,E,I,E,E,E,E,E,C,M,E,K,W,G,A,E,C,C,E,C,M,C,C,E,C,O,C,C,E,A,E,K,E,C,I,E,A,E,O,E,C,K,E,G,M,E,G,O,E,E,E,A,Y,O,Q,C,C,C,O,Q,C,C,W,O,I,A,C,E,E,S,E,C,E,O,S,C,E,O,A,S,C,E,G,E,M,A,U,mC,K,G,G,C,G,E,E,G,C,E,A,E,C,C,E,C,E,M,C,C,C,E,C,E,K,E,C,A,C,E,E,M,A,G,E,I,C,G,C,E,E,I,A,G,C,A,C,E,E,I,C,E,C,C,E,C,E,I,C,O,E,O,E,E,A,G,C,E,C,A,E,C,C,E,C,E,K,C,A,E,C,C,E,E,K,E,K,E,E,E,K,M,E,O,E,K,G,C,M,C,C,E,C,K,C,C,C,M,E,E,K,G,E,C,C,E,C,E,C,E,C,Q,M,E,E,E,G,C,G,G,E,I,C,G,G,Q,S,G,C,C,E,A,C,E,E,I,A,E,M,C,G,C,C,E,M,C,E,A,G,C,A,I,C,C,E,E,A,I,C,C,E,A,E,C,E,E,Q,C,G,A,I,C,C,E,E,C,C,G,C,C,E,C,C,C,E,E,C,C,E,C,C,C,E,A,E,C,E,K,C,C,C,E,C,K,C,G,A,I,C,C,E,E,E,K,C,C,C,E,C,C,E,K,C,C,C,E,C,E,E,K,C,G,G,E,K,C,C,C,E,C,C,E,K,C,C,C,E,C,E,G,C,I,C,G,K,C,C,C,E,E,E,G,C,G,G,E,I,C,G,G,Q,C,E,E,I,C,E,E,C,M,E,C,E,C,E,E,C,E,C,Q,C,E,E,C,C,G,A,E,C,C,E,C,M,C,C,E,C,M,C,M,C,C,E,C,C,C,E,C,K,E,K,C,C,C,E,C,E,E,C,C,C,CCEA,IAAM,EAAS,mCACT,EAAY,SAAS,aAAa,CAAC,WACnC,EAAY,SAAS,aAAa,CAAC,iBACnC,EAAa,SAAS,aAAa,CAAC,kBACpC,EAAkB,SAAS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","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n    try {\n        var info = gen[key](arg);\n        var value = info.value;\n    } catch (error) {\n        reject(error);\n        return;\n    }\n    if (info.done) {\n        resolve(value);\n    } else {\n        Promise.resolve(value).then(_next, _throw);\n    }\n}\nfunction _async_to_generator(fn) {\n    return function() {\n        var self = this, args = arguments;\n        return new Promise(function(resolve, reject) {\n            var gen = fn.apply(self, args);\n            function _next(value) {\n                asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n            }\n            function _throw(err) {\n                asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n            }\n            _next(undefined);\n        });\n    };\n}\nfunction _ts_generator(thisArg, body) {\n    var f, y, t, g, _ = {\n        label: 0,\n        sent: function() {\n            if (t[0] & 1) throw t[1];\n            return t[1];\n        },\n        trys: [],\n        ops: []\n    };\n    return g = {\n        next: verb(0),\n        \"throw\": verb(1),\n        \"return\": verb(2)\n    }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() {\n        return this;\n    }), g;\n    function verb(n) {\n        return function(v) {\n            return step([\n                n,\n                v\n            ]);\n        };\n    }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while(_)try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [\n                op[0] & 2,\n                t.value\n            ];\n            switch(op[0]){\n                case 0:\n                case 1:\n                    t = op;\n                    break;\n                case 4:\n                    _.label++;\n                    return {\n                        value: op[1],\n                        done: false\n                    };\n                case 5:\n                    _.label++;\n                    y = op[1];\n                    op = [\n                        0\n                    ];\n                    continue;\n                case 7:\n                    op = _.ops.pop();\n                    _.trys.pop();\n                    continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n                        _ = 0;\n                        continue;\n                    }\n                    if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n                        _.label = op[1];\n                        break;\n                    }\n                    if (op[0] === 6 && _.label < t[1]) {\n                        _.label = t[1];\n                        t = op;\n                        break;\n                    }\n                    if (t && _.label < t[2]) {\n                        _.label = t[2];\n                        _.ops.push(op);\n                        break;\n                    }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop();\n                    continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) {\n            op = [\n                6,\n                e\n            ];\n            y = 0;\n        } finally{\n            f = t = 0;\n        }\n        if (op[0] & 5) throw op[1];\n        return {\n            value: op[0] ? op[1] : void 0,\n            done: true\n        };\n    }\n}\nvar apiKey = \"31c7df93fe54a4ba72b947868403b5cd\";\nvar cityInput = document.querySelector(\"#search\");\nvar searchBtn = document.querySelector(\"#searchButton\");\nvar currentBtn = document.querySelector(\"#currentButton\");\nvar locationElement = document.querySelector(\"#city\");\nvar temperatureElement = document.querySelector(\"#temperature\");\nvar weatherIconElement = document.querySelector(\"#icon\");\nvar dateTimeElement = document.querySelector(\".weather-widget__date\");\nvar descriptionElement = document.querySelector(\".weather-widget__description\");\nfunction updateWeatherData(data) {\n    var location = data.name;\n    var temperature = \"\".concat(Math.round(data.main.temp));\n    var weatherDescription = data.weather[0].description;\n    var iconCode = data.weather[0].icon;\n    var date = new Date();\n    var dateTime = date.toLocaleString(\"en-GB\", {\n        weekday: \"long\",\n        hour: \"2-digit\",\n        minute: \"2-digit\"\n    });\n    locationElement.textContent = location;\n    temperatureElement.textContent = temperature;\n    weatherIconElement.src = \"https://openweathermap.org/img/wn/\".concat(iconCode) + \"@2x.png\";\n    dateTimeElement.textContent = dateTime;\n    descriptionElement.textContent = \"\".concat(weatherDescription.charAt(0).toUpperCase()) + weatherDescription.slice(1);\n}\nfunction fetchWeather(city) {\n    return _fetchWeather.apply(this, arguments);\n}\nfunction _fetchWeather() {\n    _fetchWeather = _async_to_generator(function(city) {\n        var response, data, error;\n        return _ts_generator(this, function(_state) {\n            switch(_state.label){\n                case 0:\n                    _state.trys.push([\n                        0,\n                        3,\n                        ,\n                        4\n                    ]);\n                    return [\n                        4,\n                        fetch(\"https://api.openweathermap.org/data/2.5/weather?q=\".concat(city) + \"&appid=\".concat(apiKey, \"&units=metric\"))\n                    ];\n                case 1:\n                    response = _state.sent();\n                    return [\n                        4,\n                        response.json()\n                    ];\n                case 2:\n                    data = _state.sent();\n                    if (data.cod === 200) updateWeatherData(data);\n                    return [\n                        3,\n                        4\n                    ];\n                case 3:\n                    error = _state.sent();\n                    return [\n                        3,\n                        4\n                    ];\n                case 4:\n                    return [\n                        2\n                    ];\n            }\n        });\n    });\n    return _fetchWeather.apply(this, arguments);\n}\nsearchBtn.addEventListener(\"click\", function() {\n    var city = cityInput.value.trim();\n    if (city) fetchWeather(city);\n});\nfunction getCurrentWeather() {\n    return _getCurrentWeather.apply(this, arguments);\n}\nfunction _getCurrentWeather() {\n    _getCurrentWeather = _async_to_generator(function() {\n        return _ts_generator(this, function(_state) {\n            try {\n                if (navigator.geolocation) navigator.geolocation.getCurrentPosition(function() {\n                    var _ref = _async_to_generator(function(position) {\n                        var lat, lon, response, data, error;\n                        return _ts_generator(this, function(_state) {\n                            switch(_state.label){\n                                case 0:\n                                    lat = position.coords.latitude;\n                                    lon = position.coords.longitude;\n                                    _state.label = 1;\n                                case 1:\n                                    _state.trys.push([\n                                        1,\n                                        4,\n                                        ,\n                                        5\n                                    ]);\n                                    return [\n                                        4,\n                                        fetch(\"https://api.openweathermap.org/data/2.5/weather?lat=\".concat(lat) + \"&lon=\".concat(lon, \"&appid=\").concat(apiKey, \"&units=metric\"))\n                                    ];\n                                case 2:\n                                    response = _state.sent();\n                                    return [\n                                        4,\n                                        response.json()\n                                    ];\n                                case 3:\n                                    data = _state.sent();\n                                    if (data.cod === 200) updateWeatherData(data);\n                                    else showErrorMessage(\"Error: City not found or invalid coordinates.\");\n                                    return [\n                                        3,\n                                        5\n                                    ];\n                                case 4:\n                                    error = _state.sent();\n                                    showErrorMessage(\"Error fetching weather data: \" + error.message);\n                                    return [\n                                        3,\n                                        5\n                                    ];\n                                case 5:\n                                    return [\n                                        2\n                                    ];\n                            }\n                        });\n                    });\n                    return function(position) {\n                        return _ref.apply(this, arguments);\n                    };\n                }(), function(error) {\n                    showErrorMessage(\"Geolocation error: \" + error.message);\n                });\n                else showErrorMessage(\"Geolocation is not supported by this browser.\");\n            } catch (error) {\n                showErrorMessage(\"Unexpected error: \" + error.message);\n            }\n            return [\n                2\n            ];\n        });\n    });\n    return _getCurrentWeather.apply(this, arguments);\n}\nfunction showErrorMessage(message) {\n    var errorMessage = document.createElement(\"div\");\n    errorMessage.textContent = message;\n    errorMessage.style = \"color: red; position: fixed; top: 10px; left: 50%; transform: translateX(-50%); background: #f8d7da; padding: 10px; border: 1px solid #f5c6cb; border-radius: 5px;\";\n    document.body.appendChild(errorMessage);\n    setTimeout(function() {\n        return errorMessage.remove();\n    }, 3000);\n}\ncurrentBtn.addEventListener(\"click\", function() {\n    getCurrentWeather();\n});\nfetchWeather(\"Lviv\");\n\n//# sourceMappingURL=index.0960f66b.js.map\n","'use strict';\n\nconst apiKey = '31c7df93fe54a4ba72b947868403b5cd';\nconst cityInput = document.querySelector('#search');\nconst searchBtn = document.querySelector('#searchButton');\nconst currentBtn = document.querySelector('#currentButton');\nconst locationElement = document.querySelector('#city');\nconst temperatureElement = document.querySelector('#temperature');\nconst weatherIconElement = document.querySelector('#icon');\nconst dateTimeElement = document.querySelector('.weather-widget__date');\nconst descriptionElement = document\n  .querySelector('.weather-widget__description');\n\nfunction updateWeatherData(data) {\n  const location = data.name;\n  const temperature = `${Math.round(data.main.temp)}`;\n  const weatherDescription = data.weather[0].description;\n  const iconCode = data.weather[0].icon;\n  const date = new Date();\n  const dateTime = date.toLocaleString('en-GB', {\n    weekday: 'long', hour: '2-digit', minute: '2-digit',\n  });\n\n  locationElement.textContent = location;\n  temperatureElement.textContent = temperature;\n\n  weatherIconElement.src\n   = `https://openweathermap.org/img/wn/${iconCode}`\n   + `@2x.png`;\n  dateTimeElement.textContent = dateTime;\n\n  descriptionElement.textContent\n  = `${weatherDescription.charAt(0).toUpperCase()}`\n  + weatherDescription.slice(1);\n}\n\nasync function fetchWeather(city) {\n  try {\n    const response = await fetch(\n      `https://api.openweathermap.org/data/2.5/weather?q=${city}`\n      + `&appid=${apiKey}&units=metric`,\n    );\n    const data = await response.json();\n\n    if (data.cod === 200) {\n      updateWeatherData(data);\n    } else {\n\n    }\n  } catch (error) {\n\n  }\n}\n\nsearchBtn.addEventListener('click', () => {\n  const city = cityInput.value.trim();\n\n  if (city) {\n    fetchWeather(city);\n  }\n});\n\nasync function getCurrentWeather() {\n  try {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(async(position) => {\n        const lat = position.coords.latitude;\n        const lon = position.coords.longitude;\n\n        try {\n          const response = await fetch(\n            `https://api.openweathermap.org/data/2.5/weather?lat=${lat}`\n            + `&lon=${lon}&appid=${apiKey}&units=metric`,\n          );\n          const data = await response.json();\n\n          if (data.cod === 200) {\n            updateWeatherData(data);\n          } else {\n            showErrorMessage('Error: City not found or invalid coordinates.');\n          }\n        } catch (error) {\n          showErrorMessage('Error fetching weather data: ' + error.message);\n        }\n      },\n      (error) => {\n        showErrorMessage('Geolocation error: ' + error.message);\n      });\n    } else {\n      showErrorMessage('Geolocation is not supported by this browser.');\n    }\n  } catch (error) {\n    showErrorMessage('Unexpected error: ' + error.message);\n  }\n}\n\nfunction showErrorMessage(message) {\n  const errorMessage = document.createElement('div');\n\n  errorMessage.textContent = message;\n\n  errorMessage.style = 'color: red; position: fixed; top: 10px; left: 50%; '\n  + 'transform: translateX(-50%); background: #f8d7da; padding: 10px; '\n  + 'border: 1px solid #f5c6cb; border-radius: 5px;';\n  document.body.appendChild(errorMessage);\n\n  setTimeout(() => errorMessage.remove(), 3000);\n}\n\ncurrentBtn.addEventListener('click', () => {\n  getCurrentWeather();\n});\n\nfetchWeather('Lviv');\n"],"names":["asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","then","_async_to_generator","fn","self","args","arguments","apply","err","undefined","_ts_generator","thisArg","body","f","y","t","g","_","label","sent","trys","ops","next","verb","Symbol","iterator","n","v","step","op","TypeError","call","pop","length","push","e","apiKey","cityInput","document","querySelector","searchBtn","currentBtn","locationElement","temperatureElement","weatherIconElement","dateTimeElement","descriptionElement","updateWeatherData","data","location","name","temperature","concat","Math","round","main","temp","weatherDescription","weather","description","iconCode","icon","dateTime","date","Date","toLocaleString","weekday","hour","minute","textContent","src","charAt","toUpperCase","slice","fetchWeather","city","_fetchWeather","_state","fetch","response","json","cod","_getCurrentWeather","navigator","geolocation","_ref","getCurrentPosition","position","lat","lon","coords","latitude","longitude","showErrorMessage","message","errorMessage","createElement","style","appendChild","setTimeout","remove","addEventListener","trim","getCurrentWeather"],"version":3,"file":"index.0960f66b.js.map"}